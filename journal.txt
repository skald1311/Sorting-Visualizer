tried to follow Flask's documentation but it touches on too many areas that I might not need.

went on youtube instead
https://www.youtube.com/watch?v=dam0GPOAvVI&t=522s by Tim

pip installed flask, flask-login, flask-sqlalchemy

only need 1 page for my sorting visualizer so I implemented only 1 route
imported Bootstrap to base.html 
jinga allows python use {% for loops...%}

probably need to research on how to run python file within html for the sorting algos
If I follow the tutorial, I won't know how to use it fundamentally => not going to try to deploy a website through python anymore

Option 1: pygame. not going to deploy a website at all
Option 2: deploy a website but only using plain JS, HTML and CSS. But this would mean that I don't get to use python, which was the purpose of this project.

=> Option 1
working out fine
finished drawing the towers with the random generated list 12:29AM
implemented reset button - R

tmr start drawing the sorting process itself, import the sorting algos from lab 9

to draw the switching of tower, need to use "yield", which pauses the sorting function at the part where u switch the elemtn and we draw then call the function again to let it continue at the yielded part

color the two towers that we are swapping
need to fit in the current sorting function chosen

merge sort too fast to look ? dunno how to do it inplace :(
quick sort too fast for human eye. Super slow video included :)

Project done 
Minimum viable product achieved: 1. Bubble sort, selection sort, insertion sort, merge sort, quick sort options.
                                2. speed changer (slow or fast)
                                3. informative color for towers
Timer: roughly 12 hours
April 7th - April 8th

What I learned: 1. pygame
                2. yield keyword
                3. smart way of changing color based on index in a loops
